println '------gradle lifecycle app build.gradle execute------'

beforeEvaluate { project ->
    println "gradle lifecycle app beforeEvaluate: ${project.name} --in--"
}

afterEvaluate { project ->
    println "gradle lifecycle app beforeEvaluate: ${project.name} --in--"
}

class GreetingPluginExtension{
    String message = "Hello from GreetingPlugin"
}


class GreetingPlugin implements Plugin<Project>{

    @Override
    void apply(Project project){

        def extension  = project.extensions.create('greeting',GreetingPluginExtension)

        project.task('hello'){
            doLast {
                println extension.message
            }
        }
    }
}

apply plugin: GreetingPlugin //应用插件，这样插件才能在gradle构建过程中生效。
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions' //deprecated,分解为viewBinding和 kotlin-parcelize
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"

def config = rootProject.extensions.getByName("ext")

android {
    compileSdkVersion config["compile_sdk"]

    defaultConfig {
        applicationId "com.cgy.mycollections"
        minSdkVersion config["min_sdk"]
        targetSdkVersion config["target_sdk"]
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner config["test_runner"]
    }

    //配置keystore签名
    signingConfigs {
        debug {
//            storeFile file("debug.keystore")
            storeFile file('../projectbuild/debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false //是否打开混淆
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.java_version
        targetCompatibility rootProject.ext.java_version
    }
    kotlinOptions {
        jvmTarget = rootProject.ext.java_version
    }

    //viewBinding比dataBinding更加轻量，但是只能绑定视图，不能绑定数据
    //viewBinding此处仅用于取代kotlin-android-extensions插件中自动生成kotlin布局绑定的功能
    buildFeatures {
        dataBinding true
        viewBinding true
    }

    // Butterknife,CameraX requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    sourceSets {
//        main.java.srcDirs += 'src/main/kotlin'
//        main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
//        test.java.srcDirs += 'src/test/kotlin'
//        androidTest.java.srcDirs += 'src/androidTest/kotlin'
//    }

//    packagingOptions {
//        exclude 'LICENSE.txt'
//        exclude 'META-INF/DEPENDENCIES'
//        exclude 'META-INF/ASL2.0'
//        exclude 'META-INF/NOTICE'
//        exclude 'META-INF/LICENSE'
//    }
//
//    lintOptions {
//        quiet true
//        abortOnError false
//        ignoreWarnings true
//        disable 'InvalidPackage'            //Some libraries have issues with this.
//        disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
//        disable 'IconDensities'             //For testing purpose. This is safe to remove.
//        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
//    }

//    flavorDimensions "all"
//
//    productFlavors {
//        mainFlavor {
//            dimension "all"
//
//            //                  See: https://firebase.google.com/docs/dynamic-links/android/create#set-up-firebase-and-the-dynamic-links-sdk
//            resValue "string", "dynamic_links_uri_prefix", "https://blockchainlock.page.link"
//        }
//    }
}

//kotlin DSL
//configurations.all {
//    resolutionStrategy {
//        force("org.antlr:antlr4-runtime:4.7.1")
//        force("org.antlr:antlr4-tool:4.7.1")
//    }
//}
dependencies {
    //正常依赖
    //implementation 'com.chemao.android:chemao-sdk:1.2.3'
    //关闭全部依赖传递-方法1
    //implementation 'com.chemao.android:chemao-sdk:1.2.3@aar'
    //关闭全部依赖传递-方法2
    //implementation('com.chemao.android:chemao-sdk:1.2.3') {
    //		transitive = false
    //}
    def applicationDependencies = rootProject.ext.mainApplication
    def unitTestDependencies = rootProject.ext.unitTesting
    def acceptanceTestDependencies = rootProject.ext.acceptanceTesting
//    def developmentDependencies = rootProject.ext.development


    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':mylibrary')
    implementation project(':mediaoperator')

    //使用kotlin注解 的项目 必须用 kapt 不能用 annotationProcessor
//   如果你有其他的注解处理器，它们都必须全部被从 annotationProcessor 转换为 kapt
    //Compile time dependencies
    kapt applicationDependencies.roomCompiler
    kapt applicationDependencies.glideCompiler
    kapt applicationDependencies.butterknifeCompiler

    //Application dependencies
    implementation applicationDependencies.lifecycle
    implementation applicationDependencies.room
    implementation applicationDependencies.navFragment
    implementation applicationDependencies.navUi
    implementation applicationDependencies.navFragmentKtx
    implementation applicationDependencies.navUiKtx
    implementation applicationDependencies.cameraCore
    implementation applicationDependencies.camera2
    implementation applicationDependencies.workRuntime
    implementation applicationDependencies.workRxjava2
    implementation applicationDependencies.workGcm
    implementation applicationDependencies.appCompat
    implementation applicationDependencies.constraintLayout
    implementation applicationDependencies.material
    implementation applicationDependencies.legacy
    implementation applicationDependencies.cardview
    implementation applicationDependencies.viewpager2
    implementation applicationDependencies.web3jCore
    implementation applicationDependencies.web3jAbi
    implementation applicationDependencies.web3jInfura
    implementation applicationDependencies.gson
    implementation applicationDependencies.okhttpLoggingInterceptor
    implementation applicationDependencies.retrofit2
    implementation applicationDependencies.retrofit2Gson
    implementation applicationDependencies.retrofit2Adapter
    implementation applicationDependencies.retrofit2Xml
    implementation applicationDependencies.rxjava
    implementation applicationDependencies.rxandroid
    implementation applicationDependencies.yanzhenjieRecyclerView
    implementation applicationDependencies.glide
    implementation applicationDependencies.fresco
    implementation applicationDependencies.systembartint
    implementation applicationDependencies.lottie
    implementation applicationDependencies.butterknife
    implementation applicationDependencies.MPAndroidChart

//    Unit/Integration tests dependencies
    testImplementation unitTestDependencies.kotlin
    testImplementation unitTestDependencies.kotlinTest
    testImplementation unitTestDependencies.robolectric
    testImplementation unitTestDependencies.junit
    testImplementation unitTestDependencies.mockito
    testImplementation unitTestDependencies.kluent

//    Acceptance tests dependencies
    androidTestImplementation acceptanceTestDependencies.testRunner
    androidTestImplementation acceptanceTestDependencies.testRules
    androidTestImplementation acceptanceTestDependencies.espressoCore
    androidTestImplementation acceptanceTestDependencies.espressoIntents
    androidTestImplementation acceptanceTestDependencies.androidAnnotations

//    Development dependencies
//    debugImplementation developmentDependencies.leakCanary
//    releaseImplementation developmentDependencies.leakCanaryNoop
//    testImplementation developmentDependencies.leakCanaryNoop
}


//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    implementation('org.web3j:core:3.3.1-android')
//    implementation('org.web3j:abi:3.3.1-android')
//    implementation('org.web3j:infura:3.3.1-android')
//    testImplementation 'junit:junit:4.12'
//
//    //-----------------------------------------------------------------------------------
//    //    jetpack
//    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
//
//    //---------------------------
//    //jet pack Room
//    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
//    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
////    annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion"
//    //---------------------------
//
//    //---------------------------
//    // Navigation library
//    def nav_version = "2.1.0"
//    implementation "androidx.navigation:navigation-fragment:$nav_version"
//    implementation "androidx.navigation:navigation-ui:$nav_version"
//    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
//    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
//    //---------------------------
//
//    //---------------------------
//    //jet pack CameraX
//    // Use the most recent version of CameraX, currently that is alpha06.
//    def camerax_version = '1.0.0-alpha06'
//    implementation "androidx.camera:camera-core:${camerax_version}"
//    implementation "androidx.camera:camera-camera2:${camerax_version}"
//    //---------------------------
//
//    //---------------------------
//    //jet pack WorkManager
//    def work_version = "2.2.0"
//    //---------------------------
//
//    // (Java only)
//    implementation "androidx.work:work-runtime:$work_version"
//
//    // Kotlin + coroutines
////    implementation "androidx.work:work-runtime-ktx:$work_version"
//
//    // optional - RxJava2 support
//    implementation "androidx.work:work-rxjava2:$work_version"
//
//    // optional - GCMNetworkManager support
//    implementation "androidx.work:work-gcm:$work_version"
//
//    // optional - Test helpers
////    androidTestImplementation "androidx.work:work-testing:$work_version"
//
//    //---------------------------
//    //-----------------------------------------------------------------------------------
//    implementation "androidx.appcompat:appcompat:$androidx_version"
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//    implementation 'com.google.android.material:material:1.0.0'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation 'androidx.cardview:cardview:1.0.0'
//    implementation "androidx.viewpager2:viewpager2:1.0.0"
//
//    implementation 'com.google.code.gson:gson:2.8.6'
//    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.3'
//    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
//    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
//    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
//    implementation("com.squareup.retrofit2:converter-simplexml:2.2.0") {
//        exclude module: 'stax'
//        exclude module: 'stax-api'
//    }
//    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'
//    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
//
//    implementation 'com.yanzhenjie.recyclerview:x:1.3.2'
////    implementation 'com.yanzhenjie:recyclerview-swipe:1.2.0'
//
//    //使用kotlin注解 的项目 必须用 kapt 不能用 annotationProcessor
////   如果你有其他的注解处理器，它们都必须全部被从 annotationProcessor 转换为 kapt
//    implementation 'com.github.bumptech.glide:glide:4.10.0'
//    kapt 'com.github.bumptech.glide:compiler:4.10.0'
//
//    implementation 'com.facebook.fresco:fresco:1.0.0'
//    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'
//    implementation 'com.airbnb.android:lottie:2.8.0'
////    lottie 2.8.0使用了androidx 不能直接升，2.7.0未使用androidx
//
//    implementation 'com.jakewharton:butterknife:10.1.0'
//    kapt 'com.jakewharton:butterknife-compiler:10.1.0'
////    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
////    implementation 'com.jakewharton:butterknife:8.8.1'
////    kapt 'androidx.databinding:databinding-compiler:3.5.2'
////    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//
//    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
//
////    implementation 'com.google.firebase:firebase-core:17.2.0'
////    implementation 'com.google.firebase:firebase-invites:17.0.0'