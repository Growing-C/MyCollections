<resources>
    <!--    <style name="AppTheme.NoActionBar">-->
    <!--状态栏颜色-->
    <!--        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>-->
    <!--控制各个控件被选中时的颜色-->
    <!--        <item name="colorAccent">@color/colorAccent</item>-->
    <!--页面背景色-->
    <!--        <item name="android:windowBackground">@color/windowBackg</item>-->
    <!--底部导航栏颜色-->
    <!--        <item name="android:navigationBarColor">@color/navigationColor</item>-->
    <!--Appbar背景色-->
    <!--        <item name="android:colorPrimary">@color/colorPrimary</item>-->
    <!--ToolBar上的Title颜色-->
    <!--        <item name="android:textColorPrimary">@color/textColorPrimary</item>-->
    <!--各个控制控件的默认颜色-->
    <!--        <item name="android:colorControlNormal">@color/colorControlNormal</item>-->
    <!--    </style>-->

    <!-- Base application theme. -->
    <style name="AppTheme" parent="AppTheme.Base">
        <!-- Customize your theme here. -->
    </style>

    <!-- Base application theme. -->
    <style name="AppTheme.Base" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <!--If you are using revision 22.1 please use just windowNoTitle. Without android:-->
        <item name="windowNoTitle">true</item><!--无标题-->
        <!--We will be using the toolbar so no need to show ActionBar-->
        <item name="windowActionBar">false</item>
        <!-- colorPrimary is used for the default action bar background -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <!-- colorPrimaryDark is used for the status bar -->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <!-- colorAccent is used as the default value for colorControlActivated
       which is used to tint widgets -->
        <item name="colorAccent">@color/colorAccent</item>
        <!--        配合沉浸式状态栏使用，用于把statusbar设为透明-->
        <!--        <item name="android:windowTranslucentStatus">true</item>-->

        <!--可以控制view默认字体颜色，也可以控制toolbar默认的title颜色 toolbarStyle中的会被这个属性重写，除非直接在toolbar中指定style-->
        <item name="android:textColorPrimary">@android:color/holo_blue_bright</item>
        <!--      可以控制view默认颜色，也可以控制toolbar菜单三点及返回按钮的颜色-->
        <!--        <item name="android:colorControlNormal">@color/icFocused</item>-->
        <!--toolbar右边文字颜色，有效,似乎层级在上面的属性会覆盖下面的 比如toolbarStyle中的actionMenuTextColor就被这里的覆盖了-->
        <item name="actionMenuTextColor">@android:color/holo_red_dark</item>
        <!--从apptheme层级设置toolbar右边弹出菜单，功能经测试有效，但是toolbarStyle中的popupTheme会覆盖这个-->
        <item name="actionOverflowMenuStyle">@style/AppTheme.PopupOverlay</item>
        <!--toolbarStyle是为了去掉自定义toolbar左边的留白,有用-->
        <item name="toolbarStyle">@style/AppToolBar</item>
        <!-- You can also set colorControlNormal, colorControlActivated
         colorControlHighlight and colorSwitchThumbNormal. -->
        <!--<item name="android:windowIsTranslucent">true</item>&lt;!&ndash;半透明&ndash;&gt;-->
        <!--windowIsTranslucent makes the background of app transparent-->
    </style>

    <!-- dialog风格的activity使用-->
    <style name="ActivityPopStyle" parent="AppTheme">
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:backgroundDimEnabled">true</item>
        <!--是否浮现在activity之上-->
        <item name="android:windowIsFloating">true</item>
    </style>

    <!--    为toolbar设置theme 可以控制toolbar样式 如返回键颜色（colorControlNormal） etc-->
    <style name="AppToolBar" parent="Widget.AppCompat.Toolbar">
        <item name="contentInsetStart">0dp</item><!-- 设置该属性解决空白部分-->

        <item name="popupTheme">@style/AppTheme.PopupOverlay</item>
        <item name="theme">@style/ToolbarTheme</item>
    </style>

    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />

    <!--很多属性如 popupBackgroun dropDownVerticalOffset在此处不生效，必须在v21中编辑才有用-->
    <!--<style name="AppTheme.PopupOverlay" parent="Widget.AppCompat.PopupMenu.Overflow"  >-->
    <!--&lt;!&ndash; 是否覆盖锚点，默认为true，即盖住Toolbar &ndash;&gt;-->
    <!--<item name="overlapAnchor">false</item>-->
    <!--<item name="android:dropDownWidth">wrap_content</item>-->
    <!--<item name="android:paddingRight">0dp</item>-->
    <!--&lt;!&ndash; 弹出层背景颜色 &ndash;&gt;-->
    <!--<item name="android:popupBackground">@mipmap/ic_launcher</item>-->
    <!--&lt;!&ndash;<item name="android:background">@android:color/black</item>&ndash;&gt;-->
    <!--&lt;!&ndash; 弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar &ndash;&gt;-->
    <!--<item name="android:dropDownVerticalOffset">9dp</item>-->
    <!--&lt;!&ndash; 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙 &ndash;&gt;-->
    <!--<item name="android:dropDownHorizontalOffset">0dp</item>-->
    <!--&lt;!&ndash; 设置弹出菜单文字颜色 &ndash;&gt;-->
    <!--<item name="android:textColor">#0099CC</item>-->
    <!--&lt;!&ndash;<item name="android:dropDownListViewStyle">@style/AppDropDownListViewStyle</item>&ndash;&gt;-->
    <!--</style>-->


    <!--貌似是RippleDrawable中使用的参数，原理不明，在view的theme中可以使用，搭配?attr/selectableItemBackgroundBorderless-->
    <style name="RippleWhite">
        <item name="android:colorControlHighlight">@android:color/holo_blue_light</item>
        <item name="android:radius">60dp</item>
    </style>


    <!--悬浮点使用-->
    <style name="PopBtnStyle">
        <item name="android:textColor">@android:color/white</item>
        <item name="android:background">@drawable/shape_circle</item>
        <item name="android:layout_width">50dp</item>
        <item name="android:layout_height">50dp</item>
        <item name="android:gravity">center</item>
    </style>

    <!--通用蓝色按钮-->
    <style name="CommonBtnStyle">
        <item name="android:textSize">18sp</item>
        <item name="android:textColor">@android:color/white</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">44dp</item>
        <item name="android:layout_marginLeft">15dp</item>
        <item name="android:layout_marginRight">15dp</item>
        <item name="android:background">@drawable/selector_btn_enable_disable</item>
        <item name="android:enabled">true</item>
    </style>
    <!--输入框数字背景-->
    <style name="InputNumberStyle">
        <item name="android:layout_marginTop">@dimen/px1</item>
        <item name="android:textSize">28sp</item>
        <item name="android:textColor">@android:color/black</item>
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">53dp</item>
        <item name="android:gravity">center</item>
        <item name="android:background">@android:color/white</item>
    </style>


    <style name="TextInputLayoutTheme" parent="Theme.AppCompat.DayNight.DarkActionBar">
        <item name="colorAccent">@color/grey_CCCCCC</item>
        <item name="android:textColorHint">@color/grey_26818181</item>
        <item name="colorControlNormal">@color/grey_26818181</item>
        <item name="colorControlActivated">@color/grey_CCCCCC</item>
        <item name="colorControlHighlight">@color/grey_CCCCCC</item>
    </style>

    <style name="AppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />

    <style name="FullscreenTheme" parent="AppTheme">
        <item name="android:actionBarStyle">@style/FullscreenActionBarStyle</item>
        <item name="android:windowActionBarOverlay">true</item>
        <item name="android:windowBackground">@null</item>
        <item name="metaButtonBarStyle">?android:attr/buttonBarStyle</item>
        <item name="metaButtonBarButtonStyle">?android:attr/buttonBarButtonStyle</item>
    </style>

    <style name="FullscreenActionBarStyle" parent="Widget.AppCompat.ActionBar">
        <item name="android:background">@color/black_overlay</item>
    </style>

    <style name="CommonDivider">
        <item name="android:background">@color/grey_26818181</item>
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">@dimen/px2_size</item>
    </style>
</resources>

    <!--<style name="OverflowMenuStyle"  parent="@style/Widget.AppCompat.PopupMenu.Overflow">--><!--&lt;!&ndash; 是否覆盖锚点，默认为true，即盖住Toolbar &ndash;&gt;--><!--<item name="overlapAnchor">false</item>--><!--<item name="android:dropDownWidth">wrap_content</item>--><!--<item name="android:paddingRight">0dp</item>--><!--&lt;!&ndash; 弹出层背景颜色 &ndash;&gt;--><!--<item name="android:popupBackground">@android:color/transparent</item>--><!--&lt;!&ndash;<item name="android:background">@drawable/ic_menu_bg</item>&ndash;&gt;--><!--&lt;!&ndash; 弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar &ndash;&gt;--><!--<item name="android:dropDownVerticalOffset">-7dp</item>--><!--&lt;!&ndash; 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙 &ndash;&gt;--><!--<item name="android:dropDownHorizontalOffset">0dp</item>--><!--&lt;!&ndash; 设置弹出菜单文字颜色 &ndash;&gt;--><!--<item name="android:textColor">#0099CC</item>--><!--&lt;!&ndash;<item name="android:dropDownListViewStyle">@style/AppDropDownListViewStyle</item>&ndash;&gt;--><!--</style>-->